// Place your settings in the file "Packages/User/assistant_ai_openai.sublime-settings",
// which overrides the settings in here. When opening this by Sublime Settings AssitantAI menu,
// your custom settings are in the right pane.
//
// In your custom settings, you must provide at least the 'credentials'. But you can also define
// custom 'prompts' and 'servers'.
//
// What you should not overwrite are 'default_prompts' nor 'default_servers' unless you really know
// the implications.
//
// This file specifies:
// * 'Completion' endpoint for OpenAI API. It's intended to continue editing the text you selected.
// * 'Edits' endpoint for OpenAI API. It's intended to edit the text you selected, after providing an instruction.
// * 'Chat Completions' endpoint for OpenAI API. Like 'Completions' but with the power of ChatGPT AI models
{
	// Add your credentials in user settings file, following this structure:
	"credentials": {
		// Each server (default or custom) must have a unique 'id'.
		// For each server id, you must specify the required credentials.
		"openai": {
			// Create your OpenAI API key from:
			// https://platform.openai.com/account/api-keys

			// "api_key": "sk-XXX..."
		},
		// For the example below of a custom server, then:
		// "openai_local": {
		// 		"api_key": "sk-XXX..."
		// }
	},

	// add your custom prompts
	"prompts": [],

	// add your custom servers
	"servers": [
		// You can also define your own OpenAI servers by importing the provided in 'default_servers' key below.
		// Here is an example of a localhost server (i.e.: a reverse proxy) that includes all definitions of the default one.
		// See the 'import' key, that makes a copy of the default (identified by its 'id') and overwrites the defined keys.
		//
		// {
		// 	"id": "openai_local",              // choose a unique id for your custom server
		// 	"import": "openai",                // import from the already defined server
		// 	"name": "OpenAI Local",            // overwrite the imported name
		// 	"url": "https://localhost:443",    // overwrite the url, where a reverse proxy can be setup by the user
		// },
	],

	// Default prompts and servers ---------------------------------------------

	// WARNING
	// You don't need to edit/overwrite the following specifications.
	// Instead, you can use their id's to import those in your settings and effortlessly create new ones.
	// This plugin may provide updates to these definitions and if you overwrite them, you may miss new features.

	// prompts provided by this package (OpenAI basic prompts)
	"default_prompts": [
		{
			"id": "continue_selected_text",
			"name": "Continue selected text",
			"icon": "…",
			"description": "Given a selected text, continue writing from there.",
			"required_inputs": ["text"],
			"required_endpoints": [
				"openai/completions",
				"openai/chat_completions"
			],
			"params": {
				"temperature": 1.0,
				"max_tokens": 1800,
			},
			"command": "append",
		},
		{
			"id": "edit_selected_text",
			"name": "Edit selected text",
			"icon": "✎",
			"description": "Give an instruction to change the selected text.",
			"required_inputs": ["text", "instruction"],
			"required_endpoints": ["openai/edits"],
			"params": {
				"temperature": 1.0,
			},
			"command": "replace",
		},
		{
			"id": "ask_change_code",
			"name": "Ask for a change to ${syntax} text",
			"icon": "⇆",
			"description": "Give an instruction to change the selected ${syntax} text.",
			"required_inputs": ["text", "instruction"],
			"required_endpoints": ["openai/chat_completions"],
			"vars": {
				"text": [
					"The following is a portion of ${syntax}.",
					"Make these changes:",
					"${instruction}.",
					"Return only the edited ${syntax} text:",
					"",
					"${text}",
				],
			},
			"params": {
				"temperature": 1.0,
				"max_tokens": 2048,
			},
			"command": "replace",
		},
	],

	// server specs provided by this package (OpenAI)
	"default_servers": [
		{
			"id": "openai",
			"name": "OpenAI",
			"url": "https://api.openai.com:443",
			"timeout": 60,
			"required_credentials": ["api_key"],
			"headers": {
				"Authorization": "Bearer ${api_key}",
				"Content-Type": "application/json",
				"cache-control": "no-cache",
			},
			"endpoints": {
				"completions": {
					"name": "Completions",
					"icon": "᠁",
					"method": "POST",
					"resource": "/v1/completions",
					"required_vars": ["text"],
					"valid_params": {
						"model": "string",
						"prompt": "string",
						"suffix": "string",
						"max_tokens": "integer",
						"temperature": "number",
						"top_p": "number",
						"n": "integer",
						"stream": "boolean",
						"logprobs": "integer",
						"echo": "boolean",
						"stop": "string",
						"presence_penalty": "number",
						"frequency_penalty": "number",
						"best_of": "integer",
						"logit_bias": "object",
						"user": "string",
					},
					"request": {
						"model": "text-davinci-001",
						"prompt": "${text}",
					},
					"response": {
						"output": "${text}",
						"paths": {
							"error": "error",
							"text": "choices/0/text",
						},
					},
				},
				"chat_completions": {
					"name": "Chat Completions",
					"icon": "⇆",
					"method": "POST",
					"resource": "/v1/chat/completions",
					"required_vars": ["text"],
					"valid_params": {
						"model": "string",
						"messages": "string",
						"temperature": "number",
						"top_p": "number",
						"n": "integer",
						"stream": "boolean",
						"stop": "string",
						"max_tokens": "integer",
						"presence_penalty": "number",
						"frequency_penalty": "number",
						"logit_bias": "object",
						"user": "string",
					},
					"request": {
						"model": "gpt-4",
						"messages": [
							{
								"role": "system",
								"content": "You are an assistant embedded in a text editor. The prompts you are receiving from the user are triggered from keyboard shortcuts upon some text selected by the user from the editor's viewport. Typically, the user will expect you to reply with the same text as the user prompts but with the modifications asked for. The prompt may include some instructions to follow, those are added by the user.",
							},
							{
								"role": "user",
								"content": "${text}",
							}
						],
					},
					"response": {
						"output": "${text}",
						"paths": {
							"error": "error",
							"text": "choices/0/message/content",
						},
					},
				},
				"edits": {
					"name": "Edits",
					"icon": "✎",
					"method": "POST",
					"resource": "/v1/edits",
					"required_vars": ["text", "instruction"],
					"valid_params": {
						"model": "string",
						"input": "string",
						"instruction": "string",
						"n": "integer",
						"temperature": "float",
						"top_p": "number",
					},
					"request": {
						"model": "text-davinci-edit-001",
						"input": "${text}",
						"instruction": "${instruction}",
					},
					"response": {
						"output": "${text}",
						"paths": {
							"error": "error",
							"text": "choices/0/text",
						},
					},
				},
			}
		},
	]
}